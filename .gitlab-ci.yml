stages:
  - build
  - pre_release
  - release

variables:
  SRC_PATH: /src/github.com/StackVista/stackstate-process-agent
  STS_AWS_BUCKET: stackstate-process-agent-2-test
  STS_REPO_BRANCH_NAME: $CI_COMMIT_REF_NAME
  CIRCLE_BRANCH: $CI_COMMIT_REF_NAME
  STS_DOCKER_RELEASE_REPO: stackstate-process-agent
  STS_DOCKER_TEST_REPO: stackstate-process-agent-test
  GO111MODULE: "on"
  QUAY_REGISTRY: quay.io
  DOCKER_REGISTRY: docker.io
  RUNNER7_DIR: $CI_PROJECT_DIR/.cd-builders/runner-gitlab-centos7
  VERSION_LOGIC: '(if [ "$${CI_COMMIT_TAG}" == "" ]; then echo "$${CI_COMMIT_SHORT_SHA}"; else echo "$${CI_COMMIT_TAG}"; fi);'
  LINUX_BUILDER: artifactory.tooling.stackstate.io/docker-virtual/stackstate/stackstate-process-agent-builder:llvmclang11-x64-20221207-c3bf4ae
  GOPATH: "$CI_PROJECT_DIR/.go"

cache:
  - key:
      files:
        - go.mod
        - go.sum
    paths:
      - .go/


dependencies:
  image: ${LINUX_BUILDER}
  stage: build
  needs: []
  script:
    - mkdir -p .go
    - go mod download

build_protobuf:
  image: ${LINUX_BUILDER}
  stage: build
  needs: [ dependencies ]
  script:
    - rake protobuf

build_ebpf:
  image: ${LINUX_BUILDER}
  stage: build
  needs: [ dependencies ]
  script:
    - cd $(go list -f '{{ .Dir }}' -m github.com/StackVista/stackstate-agent)
    - cat go.mod | grep 'github.com/StackVista/stackstate-agent/pkg' | grep '=>' | awk '{print $1}' | xargs -I{} go mod edit -dropreplace={}
    - inv -e system-probe.object-files
    - cp ./pkg/ebpf/bytecode/build ${CI_PROJECT_DIR}/ebpf-object-files
  artifacts:
    paths:
      - ebpf-object-files/*

build_linux:
  image: ${LINUX_BUILDER}
  stage: build
  needs: [ dependencies ]
  script:
    - export PROCESS_AGENT_VERSION=$(packaging/version.sh)
    - export EBPF=${EBPF:-true}
    - printenv
    - (cd packaging; ./apply_branding.sh)
    - rake ci
    - (cd packaging; ./build_staging_package.sh)
  artifacts:
    paths:
      - $CI_PROJECT_DIR/process-agent
      - $CI_PROJECT_DIR/packaging/debian/*.deb
    expire_in: 2 week
  retry:
    max: 2
    when:
      - always

# Gitlab dedicated runner in a Windows VM
build_windows:
  stage: build
  when: manual
  needs: []
  script:
    - rake deps windres=true --trace
    - bash -c "./packaging/apply_branding.sh"
    - .gitlab-scripts/windows_build.cmd
  allow_failure: false
  artifacts:
    expire_in: 2 weeks
    paths:
      - ./process-agent.exe
  tags:
    - windows_agent7_go1.17
  rules:
    - when: manual
      allow_failure: true
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure

pre_release_windows:
  stage: pre_release
  needs:
    - build_windows
  script:
    - rake windows-tag-or-commit-artifact
    - aws.exe s3 cp . s3://stackstate-process-agent-2-test/$CI_COMMIT_REF_NAME --recursive --exclude "*" --include "*.exe" --acl public-read
  tags:
    - windows_agent7_go1.17
  rules:
    - when: manual
      allow_failure: true
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure

pre_release_linux:
  stage: pre_release
  image: artifactory.tooling.stackstate.io/docker-virtual/stackstate/stackstate-process-agent-runner-gitlab:runner_centos7-20221024
  needs:
    - build_linux
  before_script:
    - export PROCESS_AGENT_VERSION=$(eval $VERSION_LOGIC)
  script:
    - echo "PROCESS_AGENT_VERSION=${VERSION}"
    - ls -la $CI_PROJECT_DIR
    - ls -la $CI_PROJECT_DIR/packaging
    - cd $CI_PROJECT_DIR/packaging && ./publish_staging_package.sh

.docker_build:
  image: artifactory.tooling.stackstate.io/docker-virtual/docker:18.06.0
  services:
    - name: artifactory.tooling.stackstate.io/docker-virtual/docker:18.09-dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "${docker_user}" -p "${docker_password}" "${DOCKER_REGISTRY}"
    - docker login -u "${quay_user}" -p "${quay_password}" "${QUAY_REGISTRY}"

pre_release_image:
  stage: pre_release
  needs:
    - build_linux
  script:
    - cd $CI_PROJECT_DIR
    - ./packaging/publish_image.sh $CI_COMMIT_REF_NAME $STS_DOCKER_TEST_REPO $CI_PROJECT_DIR/process-agent $CI_COMMIT_SHORT_SHA

release_image:
  extends: [ .docker_build ]
  stage: release
  needs:
    - build_linux
  script:
    - cd $CI_PROJECT_DIR
    - export PUSH_LATEST=true
    - ./packaging/publish_image.sh $CI_COMMIT_REF_NAME $STS_DOCKER_RELEASE_REPO $CI_PROJECT_DIR/process-agent latest
  when: manual
  only:
    - tags
    - trigger

build_builder_x64:
  extends: [ .docker_build ]
  stage: build
  rules:
    - when: manual
      allow_failure: true
  script:
    - cd .cd-builders/builder-x64; pwd
    - export RUNTIMETAG="$(date +%Y%m%d)-${CI_COMMIT_SHA:0:7}"; echo ${RUNTIMETAG}
    - docker build -t stackstate/stackstate-process-agent-builder:llvmclang11-x64-${RUNTIMETAG} .
    - docker push stackstate/stackstate-process-agent-builder:llvmclang11-x64-${RUNTIMETAG}
  timeout: 3 hours
  tags:
    - sts-k8s-xl-runner

build_runner_centos7:
  extends: [ .docker_build ]
  stage: build
  retry:
    max: 2
    when:
      - always
  rules:
    - when: manual
      allow_failure: true
  script:
    - cd $RUNNER7_DIR
    - pwd
    - export RUNTIMETAG=$(date +%Y%m%d)
    - docker build -t stackstate/stackstate-process-agent-runner-gitlab:runner_centos7-${RUNTIMETAG} .
    - docker push stackstate/stackstate-process-agent-runner-gitlab:runner_centos7-${RUNTIMETAG}
