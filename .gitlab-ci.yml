stages:
  - triggers
  - postbuild
  - report

agent_x86_64:
  stage: triggers
  variables:
    LONG_ARCH: x86_64
    SHORT_ARCH: amd64
    LLVM_ARCH: x86_64
  trigger:
    include: .gitlab-ci-x64.yml
    strategy: depend
  rules:
    - when: always


agent_arm64:
  stage: triggers
  variables:
    LONG_ARCH: aarch64
    SHORT_ARCH: arm64
    LLVM_ARCH: arm64
  trigger:
    include: .gitlab-ci-arm.yml
    strategy: depend
  rules:
    - when: always

.merge_docker_manifest: &merge_docker_manifest
  stage: postbuild
  needs: [ agent_x86_64, agent_arm64 ]
  trigger:
    include: .gitlab-ci-docker.yml
    strategy: depend
  rules:
    - when: on_success

merge_k8s_docker_manifest:
  <<: *merge_docker_manifest
  variables:
    DST_REPOSITORY: quay.io/stackstate/stackstate-k8s-process-agent
    DST_TAG: "$CI_COMMIT_REF_NAME"

merge_extra_k8s_docker_manifest:
  <<: *merge_docker_manifest
  variables:
    DST_REPOSITORY: quay.io/stackstate/stackstate-k8s-process-agent
    DST_TAG: "$CI_COMMIT_SHORT_SHA"

beest_k8s_1_33_containerd_trigger_verification:
  stage: postbuild
  needs: [ merge_extra_k8s_docker_manifest ]
  variables:
    PROCESS_AGENT_BRANCH_UNDER_TEST: "$CI_COMMIT_REF_NAME"
    PROCESS_AGENT_HASH_UNDER_TEST: "$CI_COMMIT_SHORT_SHA"
    TRIGGER_AGENT_X86_TESTS: "true"
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_BRANCH
      when: manual
      allow_failure: true
  trigger:
    project: stackvista/integrations/beest

notify-on-master-fail:
  before_script:
    - apk add --no-cache bash curl
  image: ${DOCKER_PROXY_URL}/library/alpine:latest
  only:
    - master
  script:
    - SUITE=build ./.cerberus/cerberus_notify_failure.sh
  stage: report
  tags:
    - sts-k8s-m-runner
  when: on_failure

###########################
# Job to manage pushing images to Quay
##########################
# To run this job you need to specify 2 variables:
# SOURCE_IMAGE: the full URL of the image you want to push to Quay `(e.g. docker.io/stackstate/stackstate-k8s-process-agent:latest-amd64)`
# QUAY_IMAGE: the full URL of the destination image on Quay `(e.g. quay.io/stackstate/stackstate-k8s-process-agent:latest-amd64)`
push_image_to_quay:
  stage: postbuild
  image: ${DOCKER_PROXY_URL}/docker:20
  services:
    - name: ${DOCKER_PROXY_URL}/docker:20-dind
  variables:
    # We cannot access the host docker socket in GitLab CI, so we need to use the Docker-in-Docker service
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - |
      if [ -z "$SOURCE_IMAGE" ]; then
        echo "SOURCE_IMAGE not set. Please set the CI/CD variable SOURCE_IMAGE to the URL of the image to push."
        exit 1
      fi
      if [ -z "$QUAY_IMAGE" ]; then
        echo "QUAY_IMAGE not set. Please set the CI/CD variable QUAY_IMAGE to the destination URL on Quay."
        exit 1
      fi
      echo "Login to Quay.io..."
      echo "${quay_password}" | docker login --username=${quay_user} --password-stdin quay.io
      echo "Pull source image: $SOURCE_IMAGE"
      docker pull "$SOURCE_IMAGE"
      echo "Tag image for Quay: $QUAY_IMAGE"
      docker tag "$SOURCE_IMAGE" "$QUAY_IMAGE"
      echo "Push to Quay: $QUAY_IMAGE"
      docker push "$QUAY_IMAGE"
  rules:
    # We don't need the manual job on each branch, only on master
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  allow_failure: false
